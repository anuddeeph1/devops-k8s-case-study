apiVersion: v1
kind: ServiceAccount
metadata:
  name: pod-monitor
  namespace: devops-case-study
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: pod-monitor
rules:
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources: ["namespaces"]
  verbs: ["get", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: pod-monitor
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: pod-monitor
subjects:
- kind: ServiceAccount
  name: pod-monitor
  namespace: devops-case-study
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pod-monitor
  namespace: devops-case-study
  labels:
    app: pod-monitor
spec:
  replicas: 1
  selector:
    matchLabels:
      app: pod-monitor
  template:
    metadata:
      labels:
        app: pod-monitor
    spec:
      serviceAccountName: pod-monitor
      containers:
      - name: pod-monitor
        image: anuddeeph/pod-monitor:latest
        imagePullPolicy: Always
        env:
        - name: NAMESPACE
          value: "devops-case-study"
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "100m"
        livenessProbe:
          exec:
            command:
            - pgrep
            - -f
            - pod-monitor
          initialDelaySeconds: 30
          periodSeconds: 30
        readinessProbe:
          exec:
            command:
            - pgrep
            - -f
            - pod-monitor
          initialDelaySeconds: 5
          periodSeconds: 10
      restartPolicy: Always
