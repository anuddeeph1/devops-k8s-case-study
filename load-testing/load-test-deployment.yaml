apiVersion: v1
kind: ConfigMap
metadata:
  name: load-test-script
  namespace: devops-case-study
data:
  load-test.sh: |
    #!/bin/bash
    
    # Load testing script for demonstrating HPA
    set -e
    
    TARGET_URL=${TARGET_URL:-"http://web-server-service"}
    DURATION=${DURATION:-"300"}
    CONCURRENT_USERS=${CONCURRENT_USERS:-"50"}
    
    echo "Starting load test..."
    echo "Target URL: $TARGET_URL"
    echo "Duration: $DURATION seconds"
    echo "Concurrent users: $CONCURRENT_USERS"
    echo "Test started at: $(date)"
    
    # Function to make HTTP requests
    make_request() {
        local url=$1
        local user_id=$2
        local request_count=0
        local start_time=$(date +%s)
        
        while [ $(($(date +%s) - start_time)) -lt $DURATION ]; do
            # Make HTTP request with curl
            response_code=$(curl -s -o /dev/null -w "%{http_code}" -H "User-Agent: LoadTest-User-$user_id" "$url" 2>/dev/null || echo "000")
            
            if [ "$response_code" = "200" ]; then
                request_count=$((request_count + 1))
                if [ $((request_count % 10)) -eq 0 ]; then
                    echo "User $user_id: $request_count successful requests"
                fi
            else
                echo "User $user_id: Request failed with code $response_code"
            fi
            
            # Small delay between requests to create steady load
            sleep 0.1
        done
        
        echo "User $user_id completed with $request_count successful requests"
    }
    
    # Start concurrent load generation
    for i in $(seq 1 $CONCURRENT_USERS); do
        make_request "$TARGET_URL" "$i" &
    done
    
    # Wait for all background jobs to complete
    wait
    
    echo "Load test completed at: $(date)"
  
  monitor-hpa.sh: |
    #!/bin/bash
    
    # Monitor HPA during load test
    echo "Monitoring HPA status during load test..."
    echo "Press Ctrl+C to stop monitoring"
    
    while true; do
        echo "=== $(date) ==="
        kubectl get hpa web-server-hpa -n devops-case-study -o wide 2>/dev/null || echo "HPA not found"
        kubectl get pods -n devops-case-study -l app=web-server -o wide 2>/dev/null || echo "Web server pods not found"
        echo ""
        sleep 10
    done
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: load-tester
  namespace: devops-case-study
  labels:
    app: load-tester
spec:
  replicas: 1
  selector:
    matchLabels:
      app: load-tester
  template:
    metadata:
      labels:
        app: load-tester
    spec:
      containers:
      - name: load-tester
        image: alpine/curl:latest
        command:
        - sh
        - -c
        - |
          # Install bash for our scripts
          apk add --no-cache bash
          
          # Make scripts executable
          chmod +x /scripts/load-test.sh
          chmod +x /scripts/monitor-hpa.sh
          
          echo "Load tester ready. Available commands:"
          echo "1. /scripts/load-test.sh - Run load test"
          echo "2. /scripts/monitor-hpa.sh - Monitor HPA status"
          echo ""
          echo "Environment variables:"
          echo "TARGET_URL=${TARGET_URL}"
          echo "DURATION=${DURATION}"
          echo "CONCURRENT_USERS=${CONCURRENT_USERS}"
          echo ""
          echo "Sleeping... Use 'kubectl exec' to run commands"
          
          # Keep container running
          while true; do
            sleep 3600
          done
        env:
        - name: TARGET_URL
          value: "http://web-server-service"
        - name: DURATION
          value: "300"
        - name: CONCURRENT_USERS
          value: "20"
        volumeMounts:
        - name: load-test-script
          mountPath: /scripts
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "200m"
      volumes:
      - name: load-test-script
        configMap:
          name: load-test-script
          defaultMode: 0755
---
apiVersion: batch/v1
kind: Job
metadata:
  name: load-test-job
  namespace: devops-case-study
spec:
  template:
    metadata:
      labels:
        app: load-test-job
    spec:
      restartPolicy: OnFailure
      containers:
      - name: load-test
        image: alpine/curl:latest
        command:
        - sh
        - -c
        - |
          apk add --no-cache bash
          chmod +x /scripts/load-test.sh
          exec /scripts/load-test.sh
        env:
        - name: TARGET_URL
          value: "http://web-server-service"
        - name: DURATION
          value: "180"  # 3 minutes for the job
        - name: CONCURRENT_USERS
          value: "15"
        volumeMounts:
        - name: load-test-script
          mountPath: /scripts
      volumes:
      - name: load-test-script
        configMap:
          name: load-test-script
          defaultMode: 0755
