{{- if .Values.mysql.backup.enabled }}
# This template creates a restore job when applied
# Usage: kubectl apply -f this-template-output.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "database.fullname" . }}-restore-job
  namespace: {{ .Values.global.namespace }}
  labels:
    {{- include "database.labels" . | nindent 4 }}
    app.kubernetes.io/component: restore
spec:
  template:
    metadata:
      labels:
        {{- include "database.labels" . | nindent 8 }}
        app.kubernetes.io/component: restore-job
    spec:
      restartPolicy: OnFailure
      containers:
      - name: mysql-restore
        image: "{{ .Values.mysql.image.repository }}:{{ .Values.mysql.image.tag }}"
        imagePullPolicy: {{ .Values.mysql.image.pullPolicy }}
        command:
        - /bin/bash
        - -c
        - |
          chmod +x /scripts/restore.sh
          /scripts/restore.sh
        env:
        - name: MYSQL_HOST
          value: "{{ include "database.fullname" . }}-service"
        - name: MYSQL_PORT
          value: "{{ .Values.mysql.service.port }}"
        - name: MYSQL_USER
          value: "root"
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ include "database.fullname" . }}-secret
              key: mysql-root-password
        - name: BACKUP_DIR
          value: "/backups"
        # Uncomment and set this to restore from a specific backup file
        # - name: BACKUP_FILE
        #   value: "mysql_backup_YYYYMMDD_HHMMSS.sql.gz"
        volumeMounts:
        - name: backup-storage
          mountPath: /backups
        - name: backup-scripts
          mountPath: /scripts
        resources:
          {{- toYaml .Values.mysql.backup.resources | nindent 10 }}
      volumes:
      - name: backup-storage
        persistentVolumeClaim:
          claimName: mysql-backup-pvc
      - name: backup-scripts
        configMap:
          name: {{ include "database.fullname" . }}-backup-script
          defaultMode: 0755
      {{- with .Values.mysql.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.mysql.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.mysql.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}
