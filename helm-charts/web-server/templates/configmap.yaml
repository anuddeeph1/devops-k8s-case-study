apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
  namespace: {{ .Values.global.namespace }}
  labels:
    {{- include "web-server.labels" . | nindent 4 }}
data:
  nginx.conf: |
    user nginx;
    worker_processes auto;
    error_log /var/log/nginx/error.log notice;
    pid /var/run/nginx.pid;

    events {
        worker_connections 1024;
        use epoll;
        multi_accept on;
    }

    http {
        include       /etc/nginx/mime.types;
        default_type  application/octet-stream;

        log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                        '$status $body_bytes_sent "$http_referer" '
                        '"$http_user_agent" "$http_x_forwarded_for" '
                        'rt=$request_time uct="$upstream_connect_time" '
                        'uht="$upstream_header_time" urt="$upstream_response_time"';

        access_log /var/log/nginx/access.log main;

        sendfile on;
        tcp_nopush on;
        tcp_nodelay on;
        keepalive_timeout 65;
        types_hash_max_size 2048;
        client_max_body_size 16M;

        gzip on;
        gzip_vary on;
        gzip_proxied any;
        gzip_comp_level 6;
        gzip_types
            text/plain
            text/css
            text/xml
            text/javascript
            application/json
            application/javascript
            application/xml+rss
            application/atom+xml
            image/svg+xml;

        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "no-referrer-when-downgrade" always;

        server {
            listen 80;
            server_name localhost;

            root /usr/share/nginx/html;
            index index.html;

            location / {
                try_files $uri $uri/ =404;
                
                add_header X-Pod-IP $server_addr always;
                add_header X-Server-Name $hostname always;
                
                add_header Cache-Control "no-cache, no-store, must-revalidate" always;
                add_header Pragma "no-cache" always;
                add_header Expires "0" always;
            }

            location /health {
                access_log off;
                return 200 "healthy\n";
                add_header Content-Type text/plain;
            }

            location /status {
                access_log off;
                return 200 '{"status":"ok","timestamp":"$time_iso8601","server":"$hostname"}';
                add_header Content-Type application/json;
            }

            error_page 404 /404.html;
            error_page 500 502 503 504 /50x.html;
            
            location = /404.html {
                internal;
                return 404 "Page not found\n";
            }
            
            location = /50x.html {
                internal;
                return 500 "Internal server error\n";
            }
        }
    }
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: html-template
  namespace: {{ .Values.global.namespace }}
  labels:
    {{- include "web-server.labels" . | nindent 4 }}
data:
  index.html.template: |
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>DevOps Case Study - Web Server</title>
        <style>
            body {
                font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
                margin: 0;
                padding: 0;
                background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
                min-height: 100vh;
                display: flex;
                align-items: center;
                justify-content: center;
            }
            .container {
                background: white;
                border-radius: 15px;
                padding: 40px;
                box-shadow: 0 20px 40px rgba(0,0,0,0.1);
                max-width: 600px;
                width: 90%;
            }
            h1 {
                color: #333;
                text-align: center;
                margin-bottom: 30px;
                font-size: 2.5em;
                text-shadow: 2px 2px 4px rgba(0,0,0,0.1);
            }
            .info-grid {
                display: grid;
                grid-template-columns: 1fr 1fr;
                gap: 20px;
                margin-top: 20px;
            }
            .info-card {
                background: #f8f9fa;
                border-radius: 10px;
                padding: 20px;
                border-left: 4px solid #667eea;
            }
            .info-card h3 {
                margin: 0 0 10px 0;
                color: #333;
                font-size: 1.2em;
            }
            .info-card p {
                margin: 0;
                color: #666;
                font-size: 1.1em;
                font-weight: bold;
            }
            .status {
                text-align: center;
                margin-top: 30px;
                padding: 15px;
                background: #d4edda;
                border-radius: 10px;
                color: #155724;
                font-weight: bold;
            }
            .timestamp {
                text-align: center;
                margin-top: 20px;
                color: #666;
                font-size: 0.9em;
            }
            @media (max-width: 768px) {
                .info-grid {
                    grid-template-columns: 1fr;
                }
            }
        </style>
    </head>
    <body>
        <div class="container">
            <h1>üöÄ DevOps Case Study</h1>
            
            <div class="info-grid">
                <div class="info-card">
                    <h3>üìç Pod IP Address</h3>
                    <p>POD_IP_PLACEHOLDER</p>
                </div>
                
                <div class="info-card">
                    <h3>üè† Serving Host</h3>
                    <p>SERVING_HOST_PLACEHOLDER</p>
                </div>
                
                <div class="info-card">
                    <h3>üè∑Ô∏è Pod Name</h3>
                    <p>POD_NAME_PLACEHOLDER</p>
                </div>
                
                <div class="info-card">
                    <h3>üîß Node Name</h3>
                    <p>NODE_NAME_PLACEHOLDER</p>
                </div>
            </div>
            
            <div class="status">
                ‚úÖ Web Server is Running Successfully
            </div>
            
            <div class="timestamp">
                Last updated: <span id="timestamp"></span>
            </div>
        </div>

        <script>
            document.getElementById('timestamp').textContent = new Date().toLocaleString();
            setTimeout(function() {
                location.reload();
            }, 30000);
        </script>
    </body>
    </html>
