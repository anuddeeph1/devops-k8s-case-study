{{- if .Values.loadTesting.enabled }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "devops-case-study.fullname" . }}-load-test-script
  namespace: {{ include "devops-case-study.namespace" . }}
  labels:
    {{- include "devops-case-study.labels" . | nindent 4 }}
data:
  load-test.sh: |
    #!/bin/bash
    
    set -e
    
    TARGET_URL=${TARGET_URL:-"http://{{ include "devops-case-study.fullname" . }}-web-server-service"}
    DURATION=${DURATION:-"{{ .Values.loadTesting.deployment.duration }}"}
    CONCURRENT_USERS=${CONCURRENT_USERS:-"{{ .Values.loadTesting.deployment.concurrentUsers }}"}
    
    echo "Starting load test..."
    echo "Target URL: $TARGET_URL"
    echo "Duration: $DURATION seconds"
    echo "Concurrent users: $CONCURRENT_USERS"
    echo "Test started at: $(date)"
    
    make_request() {
        local url=$1
        local user_id=$2
        local request_count=0
        local start_time=$(date +%s)
        
        while [ $(($(date +%s) - start_time)) -lt $DURATION ]; do
            response_code=$(curl -s -o /dev/null -w "%{http_code}" -H "User-Agent: LoadTest-User-$user_id" "$url" 2>/dev/null || echo "000")
            
            if [ "$response_code" = "200" ]; then
                request_count=$((request_count + 1))
                if [ $((request_count % 10)) -eq 0 ]; then
                    echo "User $user_id: $request_count successful requests"
                fi
            else
                echo "User $user_id: Request failed with code $response_code"
            fi
            
            sleep 0.1
        done
        
        echo "User $user_id completed with $request_count successful requests"
    }
    
    for i in $(seq 1 $CONCURRENT_USERS); do
        make_request "$TARGET_URL" "$i" &
    done
    
    wait
    
    echo "Load test completed at: $(date)"
  
  monitor-hpa.sh: |
    #!/bin/bash
    
    echo "Monitoring HPA status during load test..."
    echo "Press Ctrl+C to stop monitoring"
    
    while true; do
        echo "=== $(date) ==="
        kubectl get hpa {{ include "devops-case-study.fullname" . }}-web-server-hpa -n {{ include "devops-case-study.namespace" . }} -o wide 2>/dev/null || echo "HPA not found"
        kubectl get pods -n {{ include "devops-case-study.namespace" . }} -l app=web-server -o wide 2>/dev/null || echo "Web server pods not found"
        echo ""
        sleep 10
    done
---
{{- if .Values.loadTesting.deployment.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "devops-case-study.fullname" . }}-load-tester
  namespace: {{ include "devops-case-study.namespace" . }}
  labels:
    {{- include "devops-case-study.labels" . | nindent 4 }}
    app.kubernetes.io/component: load-tester
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "devops-case-study.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: load-tester
  template:
    metadata:
      labels:
        {{- include "devops-case-study.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: load-tester
    spec:
      containers:
      - name: load-tester
        image: alpine/curl:latest
        command:
        - sh
        - -c
        - |
          apk add --no-cache bash
          
          chmod +x /scripts/load-test.sh
          chmod +x /scripts/monitor-hpa.sh
          
          echo "Load tester ready. Available commands:"
          echo "1. /scripts/load-test.sh - Run load test"
          echo "2. /scripts/monitor-hpa.sh - Monitor HPA status"
          echo ""
          echo "Environment variables:"
          echo "TARGET_URL=${TARGET_URL}"
          echo "DURATION=${DURATION}"
          echo "CONCURRENT_USERS=${CONCURRENT_USERS}"
          echo ""
          echo "Sleeping... Use 'kubectl exec' to run commands"
          
          while true; do
            sleep 3600
          done
        env:
        - name: TARGET_URL
          value: "http://{{ include "devops-case-study.fullname" . }}-web-server-service"
        - name: DURATION
          value: "{{ .Values.loadTesting.deployment.duration }}"
        - name: CONCURRENT_USERS
          value: "{{ .Values.loadTesting.deployment.concurrentUsers }}"
        volumeMounts:
        - name: load-test-script
          mountPath: /scripts
        resources:
          {{- toYaml .Values.loadTesting.deployment.resources | nindent 10 }}
      volumes:
      - name: load-test-script
        configMap:
          name: {{ include "devops-case-study.fullname" . }}-load-test-script
          defaultMode: 0755
{{- end }}
---
{{- if .Values.loadTesting.job.enabled }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "devops-case-study.fullname" . }}-load-test-job
  namespace: {{ include "devops-case-study.namespace" . }}
  labels:
    {{- include "devops-case-study.labels" . | nindent 4 }}
    app.kubernetes.io/component: load-test-job
spec:
  template:
    metadata:
      labels:
        {{- include "devops-case-study.labels" . | nindent 8 }}
        app.kubernetes.io/component: load-test-job
    spec:
      restartPolicy: OnFailure
      containers:
      - name: load-test
        image: alpine/curl:latest
        command:
        - sh
        - -c
        - |
          apk add --no-cache bash
          chmod +x /scripts/load-test.sh
          exec /scripts/load-test.sh
        env:
        - name: TARGET_URL
          value: "http://{{ include "devops-case-study.fullname" . }}-web-server-service"
        - name: DURATION
          value: "{{ .Values.loadTesting.job.duration }}"
        - name: CONCURRENT_USERS
          value: "{{ .Values.loadTesting.job.concurrentUsers }}"
        volumeMounts:
        - name: load-test-script
          mountPath: /scripts
      volumes:
      - name: load-test-script
        configMap:
          name: {{ include "devops-case-study.fullname" . }}-load-test-script
          defaultMode: 0755
{{- end }}
{{- end }}
