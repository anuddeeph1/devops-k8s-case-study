apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: kyverno-policies
  namespace: argocd
  labels:
    app.kubernetes.io/name: kyverno-policies
    app.kubernetes.io/component: security-policies
spec:
  project: default
  source:
    repoURL: https://kyverno.github.io/kyverno/
    chart: kyverno-policies
    targetRevision: "3.2.5"  # Latest stable policies version
    helm:
      releaseName: kyverno-policies
      values: |
        # Kyverno Policy Configuration
        
        # Pod Security Standards - Enable restrictive policies
        podSecurityStandard: "restricted"
        
        # Policy validation failure action
        validationFailureAction: "Audit"  # Can be "Enforce" or "Audit"
        
        # Background scanning for existing resources
        background: true
        
        # Custom policy exclusions (if needed)
        policyExceptions:
          enabled: true
        
        # Include policies we want
        includeOtherPolicies: true
        
        # Exclude policies we don't want (optional)
        excludeKyvernoPolicies: []
        
        # Network policy generation (this is what we want!)
        networkPolicyGeneration:
          enabled: true
        
        # Custom policies for our DevOps case study
        customPolicies:
          # Generate NetworkPolicy for database access restriction
          - name: "generate-database-networkpolicy"
            enabled: true
          # Require resource limits
          - name: "require-pod-resources"
            enabled: true
          # Restrict capabilities
          - name: "restrict-capabilities"
            enabled: true

  destination:
    server: https://kubernetes.default.svc  
    namespace: kyverno
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
    - CreateNamespace=false  # Namespace should already exist from kyverno core
    - PrunePropagationPolicy=foreground
    retry:
      limit: 5
      backoff:
        duration: 5s
        factor: 2
        maxDuration: 3m0s
