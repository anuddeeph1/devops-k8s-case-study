apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: web-server-hpa
  namespace: devops-case-study
  annotations:
    # Force HPA to be more responsive to metric changes
    autoscaling.alpha.kubernetes.io/metrics-tolerance: "10"
    autoscaling.alpha.kubernetes.io/cpu-initialization-period: "30s"
    autoscaling.alpha.kubernetes.io/initial-readiness-delay: "30s"
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: web-server
  minReplicas: 3
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 25  # Lower threshold for faster CPU-based scaling
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 50  # Lower threshold for faster memory-based scaling
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300  # 5 minutes
      policies:
      - type: Percent
        value: 10
        periodSeconds: 60
      - type: Pods
        value: 1
        periodSeconds: 60
      selectPolicy: Min
    scaleUp:
      stabilizationWindowSeconds: 30  # 30 seconds - faster response
      policies:
      - type: Percent
        value: 100  # More aggressive scaling
        periodSeconds: 30
      - type: Pods
        value: 3  # Allow up to 3 pods at once
        periodSeconds: 30
      selectPolicy: Max
  # Advanced configuration for better responsiveness
  #annotations:
  #  autoscaling.alpha.kubernetes.io/conditions: '[{"type":"AbleToScale","status":"True","reason":"ReadyForNewScale"}]'
 #   autoscaling.alpha.kubernetes.io/metrics: '[{"type":"Resource","resource":{"name":"memory","target":{"type":"Utilization","averageUtilization":55}}}]'
